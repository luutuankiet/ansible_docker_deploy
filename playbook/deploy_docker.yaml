- name: Provision Docker-in-Docker pseudo-VMs
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ../config/vps-config.yml

  vars:
    # Map new config structure to existing playbook variables
    vpcs: "{{ vpcs }}"
    state: "{{ target_state if target_state is defined else 'started' }}"  # started | absent
    filtered_vpcs: "{{ vpcs | dict2items | selectattr('key', 'equalto', target_vpc) | items2dict if target_vpc is defined else vpcs }}"
    source_compose: "../templates/final-compose.yml.j2"

  tasks:
    - name: Create dir to store compose files
      loop: "{{ filtered_vpcs | dict2items }}"
      loop_control:
        loop_var: vpc_item
      ansible.builtin.file:
        path: "./stacks/{{ vpc_item.key }}"
        state: directory
        mode: "0755"


    - name: Generate final compose file (base + extension)
      ansible.builtin.template:
        src: "{{ source_compose }}"
        dest: "./stacks/{{ vpc_item.key }}/docker-compose.yml"
        mode: "0755"
      vars:
        vpc_name: "{{ vpc_item.key }}"
        extension_name: "{{ vpc_item.value.extension }}"
      loop: "{{ filtered_vpcs | dict2items }}"
      loop_control:
        loop_var: vpc_item

    - name: Manage DinD container state (start or remove)
      community.docker.docker_container:
        name: "vpc-{{ vpc_item.key }}"
        image: "{{ common.image }}"
        state: "{{ state }}"
        privileged: "{{ common.privileged }}"
        ports:
          - "{{ vpc_item.value.traefik_port }}:80"
          - "{{ vpc_item.value.dashboard_port }}:8080"
        restart_policy: "{{ common.restart_policy }}"
        memory: "{{ vpc_item.value.memory | default('1g') }}"
        force_kill: "{{ state == 'absent' }}"
        volumes:
          - "./stacks/{{ vpc_item.key }}:/app/stacks/{{ vpc_item.key }}:ro"
        command:
          - "docker"
          - "compose"
          - "-f"
          - "/app/stacks/{{ vpc_item.key }}/docker-compose.yml"
          - "up"
      loop: "{{ filtered_vpcs | dict2items }}"
      loop_control:
        loop_var: vpc_item
